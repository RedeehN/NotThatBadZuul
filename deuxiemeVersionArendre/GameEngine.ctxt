#BlueJ class context
comment0.target=GameEngine
comment1.params=
comment1.target=GameEngine()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ GameEngine\r\n
comment10.params=pCommand
comment10.target=void\ take(Command)
comment11.params=pCommand
comment11.target=void\ drop(Command)
comment12.params=
comment12.target=void\ inventaire()
comment13.params=
comment13.target=void\ endGame()
comment14.params=pCommand
comment14.target=void\ look(Command)
comment15.params=pCommand
comment15.target=void\ eat(Command)
comment16.params=
comment16.target=void\ status()
comment17.params=
comment17.target=void\ printLocationInfo()
comment2.params=pUserInterface
comment2.target=void\ setGUI(UserInterface)
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Message\ de\ d\u00E9marrage\ du\ jeu.\r\n
comment4.params=
comment4.target=void\ createRooms()
comment4.text=\r\n\ Procedure\ qui\ initialise\ des\ Rooms\ et\ les\ lient\ entre\ elles.\r\n
comment5.params=pCommandLine
comment5.target=void\ interpretCommand(java.lang.String)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ If\ this\ command\ ends\ the\ game,\ true\ is\ returned,\ otherwise\ false\ is\r\n\ returned.\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment7.params=pCommand
comment7.target=void\ goRoom(Command)
comment7.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment8.params=pCommand
comment8.target=void\ test(Command)
comment9.params=pCommand
comment9.target=void\ back(Command)
numComments=18
